importScripts("https://cdn.jsdelivr.net/npm/idb-keyval@6.2.2/dist/umd.min.js"),importScripts("https://cdn.jsdelivr.net/npm/workbox-sw@7.3.0/build/workbox-sw.min.js");const{createStore,set,get,keys,del}=idbKeyval,notificationStore=createStore("notifications-db","notifications"),dataStore=createStore("data-db","last-seen-item"),settingsStore=createStore("settings-db","notification-settings"),API_BASE_URL="https://story-api.dicoding.dev/v1",VAPID_PUBLIC="BCCs2eonMI-6H2ctvFaWg-UYdDv387Vno_bzUzALpB442r2lCnsHmtrx8biyPi_E-1fSGABK_Qs_GlvPoJJqxbk";workbox.setConfig({debug:!1}),workbox.core.skipWaiting(),workbox.core.clientsClaim();const PRECACHE_URLS=["/","/index.html","/manifest.json","/favicon.png","/images/icons/android/android-launchericon-192-192.png","/images/icons/android/android-launchericon-512-512.png","/images/logo.png"];workbox.precaching.precacheAndRoute(PRECACHE_URLS.map((t=>({url:t,revision:null}))),{directoryIndex:"/",cleanURLs:!1}),workbox.routing.registerRoute((({url:t})=>"https://unpkg.com"===t.origin||"https://cdn.jsdelivr.net"===t.origin),new workbox.strategies.StaleWhileRevalidate({cacheName:"cdn-assets",plugins:[new workbox.expiration.ExpirationPlugin({maxEntries:50,purgeOnQuotaError:!0}),new workbox.cacheableResponse.CacheableResponsePlugin({statuses:[0,200]})]}));const isDev=["localhost","127.0.0.1"].includes(self.location.hostname)||"file:"===self.location.protocol,CACHE_NAME=isDev?"storyapp-cache-dev":"storyapp-cache-v2";function urlB64ToUint8Array(t){const e=(t+"=".repeat((4-t.length%4)%4)).replace(/-/g,"+").replace(/_/g,"/"),i=atob(e);return Uint8Array.from(i,(t=>t.charCodeAt(0)))}async function getAuthToken(){const t=await get("authData",dataStore);if(t?.token)return t.token;const e=await clients.matchAll({type:"window"});return e.length?new Promise((t=>{const i=new MessageChannel;i.port1.onmessage=e=>t(e.data.token||null),e[0].postMessage({type:"GET_AUTH_TOKEN"},[i.port2])})):null}async function flushNotifications(t){const e=await keys(notificationStore),i=await Promise.all(e.map((async t=>({id:t,...await get(t,notificationStore)}))));i.sort(((t,e)=>e.timestamp-t.timestamp));const o=await clients.get(t);o&&o.postMessage({type:"PENDING_NOTIFICATIONS",notifications:i})}async function notifyClientsOfNewNotification(t,e,i){(await clients.matchAll({type:"window"})).forEach((o=>o.postMessage({type:"NEW_NOTIFICATION",notification:{id:t,title:e,options:i,timestamp:Date.now(),read:!1}})))}async function checkForNewStories(){const t=await getAuthToken();if(!t)return;const e=await fetch(`${API_BASE_URL}/stories?page=1&size=10`,{headers:{Authorization:`Bearer ${t}`}});if(!e.ok)return;const i=await e.json(),o=await get("lastId",dataStore),n=i.listStory||[];for(const t of n){if(t.id===o)break;const e=Date.now(),i=`Story baru dari ${t.name}`,n={body:t.description,icon:"/favicon.png",data:{url:t.photoUrl},image:t.photoUrl},a=`story-${t.id}-${e}`;await set(a,{title:i,options:n,timestamp:e,read:!1,storyId:t.id},notificationStore),await self.registration.showNotification(i,n),await notifyClientsOfNewNotification(a,i,n)}n.length&&await set("lastId",n[0].id,dataStore)}async function storePeriodicNotification(){const t=Date.now(),e=`periodic-${t}`,i="Kembali ke StoryApp",o={body:"Jangan lewatkan story baru dari teman-teman!",icon:"/favicon.png",tag:"periodic-reminder",timestamp:t};await set(e,{title:i,options:o,timestamp:t,read:!1,type:"periodic"},notificationStore),await self.registration.showNotification(i,o),(await clients.matchAll({type:"window"})).forEach((n=>n.postMessage({type:"NEW_NOTIFICATION",notification:{id:e,title:i,options:o,timestamp:t,read:!1,type:"periodic"}})))}async function initDummyNotificationSettings(){const t=await get("dummyNotifications",settingsStore);if(void 0===t)await set("dummyNotifications",{enabled:!1,timerId:null},settingsStore);else if(t.enabled&&!t.timerId){const t=startDummyNotificationTimer();await set("dummyNotifications",{enabled:!0,timerId:t},settingsStore)}}async function setDummyNotificationSettings(t){const e=await get("dummyNotifications",settingsStore)||{enabled:!1,timerId:null};if(t&&!e.enabled){const t=startDummyNotificationTimer();await set("dummyNotifications",{enabled:!0,timerId:t},settingsStore),(await clients.matchAll({type:"window"})).forEach((t=>t.postMessage({type:"DUMMY_NOTIFICATIONS_STATUS",enabled:!0})))}else!t&&e.enabled&&(e.timerId&&clearInterval(e.timerId),await set("dummyNotifications",{enabled:!1,timerId:null},settingsStore),(await clients.matchAll({type:"window"})).forEach((t=>t.postMessage({type:"DUMMY_NOTIFICATIONS_STATUS",enabled:!1}))))}async function getDummyNotificationStatus(t){const e=await get("dummyNotifications",settingsStore)||{enabled:!1},i=await clients.get(t);i&&i.postMessage({type:"DUMMY_NOTIFICATIONS_STATUS",enabled:e.enabled})}function startDummyNotificationTimer(){return setInterval((async()=>{const t=await get("dummyNotifications",settingsStore);if(!t?.enabled)return;const e=Date.now(),i=`dummy-${e}`,o="Notifikasi Dummy",n={body:`Dummy at ${new Date(e).toLocaleString("id-ID")}`,icon:"/favicon.png",tag:"dummy-notification",timestamp:e};await set(i,{title:o,options:n,timestamp:e,read:!1,isDummy:!0},notificationStore),await self.registration.showNotification(o,n),(await clients.matchAll({type:"window"})).forEach((t=>t.postMessage({type:"NEW_NOTIFICATION",notification:{id:i,title:o,options:n,timestamp:e,read:!1,isDummy:!0}})))}),6e4)}workbox.routing.registerRoute((({request:t,url:e})=>"GET"===t.method&&e.origin===self.location.origin),new workbox.strategies.NetworkFirst({cacheName:CACHE_NAME,networkTimeoutSeconds:10,plugins:[new workbox.expiration.ExpirationPlugin({maxEntries:100,purgeOnQuotaError:!0}),new workbox.cacheableResponse.CacheableResponsePlugin({statuses:[0,200]})]})),workbox.routing.setCatchHandler((async({event:t})=>"navigate"===t.request.mode?caches.match("/index.html"):Response.error())),self.addEventListener("activate",(t=>{t.waitUntil((async()=>{const t=await caches.keys();if(await Promise.all(t.filter((t=>t.startsWith("storyapp-cache-")&&t!==CACHE_NAME)).map((t=>caches.delete(t)))),"periodicSync"in self.registration)try{await self.registration.periodicSync.register("fetch-new-stories",{minInterval:9e5}),await self.registration.periodicSync.register("store-periodic-notifications",{minInterval:36e5})}catch{}await initDummyNotificationSettings(),await self.clients.claim()})())})),self.addEventListener("push",(t=>{let e={};try{e=t.data.json()}catch{}const i=e.title||"Notifikasi Baru",o=e.options||{body:"Notifikasi dari StoryApp",icon:"/favicon.png"},n=Date.now().toString();t.waitUntil(set(n,{title:i,options:o,timestamp:Date.now(),read:!1},notificationStore).then((()=>self.registration.showNotification(i,o))).then((()=>notifyClientsOfNewNotification(n,i,o))))})),self.addEventListener("notificationclick",(t=>{t.notification.close(),t.waitUntil(clients.matchAll({type:"window",includeUncontrolled:!0}).then((t=>{const e=t.find((t=>t.url.includes("/")&&t.focus));return e?e.focus():clients.openWindow("/")})))})),self.addEventListener("pushsubscriptionchange",(t=>{t.waitUntil((async()=>{const t=await self.registration.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:urlB64ToUint8Array(VAPID_PUBLIC)}),e=t.getKey("p256dh"),i=t.getKey("auth"),o={endpoint:t.endpoint,keys:{p256dh:btoa(String.fromCharCode(...new Uint8Array(e))),auth:btoa(String.fromCharCode(...new Uint8Array(i)))}},n=await getAuthToken();n&&await fetch(`${API_BASE_URL}/notifications/subscribe`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${n}`},body:JSON.stringify(o)})})())})),self.addEventListener("periodicsync",(t=>{"fetch-new-stories"===t.tag&&t.waitUntil(checkForNewStories()),"store-periodic-notifications"===t.tag&&t.waitUntil(storePeriodicNotification())})),self.addEventListener("sync",(t=>{"fetch-new-stories"===t.tag&&t.waitUntil(checkForNewStories()),"store-periodic-notifications"===t.tag&&t.waitUntil(storePeriodicNotification())})),self.addEventListener("message",(t=>{const e=t.data;if("GET_AUTH_TOKEN"===e?.type&&t.ports?.[0])get("authData",dataStore).then((e=>t.ports[0].postMessage({token:e?.token||null})));else{if("AUTH_TOKEN"!==e?.type||!e.token)return"FLUSH_NOTIFICATIONS"===e?flushNotifications(t.source.id):"GET_DUMMY_NOTIFICATIONS_STATUS"===e?getDummyNotificationStatus(t.source.id):"DELETE_NOTIFICATION"===e.type?del(e.id,notificationStore).then((()=>t.source.postMessage({type:"NOTIFICATION_DELETED",id:e.id}))):"MARK_AS_READ"===e.type?get(e.id,notificationStore).then((t=>t&&set(e.id,{...t,read:!0},notificationStore))).then((()=>t.source.postMessage({type:"NOTIFICATION_MARKED_READ",id:e.id}))):"MARK_ALL_AS_READ"===e.type?keys(notificationStore).then((t=>Promise.all(t.map((t=>get(t,notificationStore).then((e=>set(t,{...e,read:!0},notificationStore)))))))).then((()=>t.source.postMessage({type:"NOTIFICATIONS_MARKED_READ"}))):"SET_DUMMY_NOTIFICATIONS"===e.command?setDummyNotificationSettings(e.enabled):void 0;set("authData",{token:e.token},dataStore)}})),setInterval((async()=>{const t=Date.now(),e=t-36e5,i=t-6048e5,o=await keys(notificationStore);for(const t of o){const o=await get(t,notificationStore);o&&(o.isDummy&&o.timestamp<e||!o.isDummy&&o.timestamp<i)&&await del(t,notificationStore)}}),216e5);